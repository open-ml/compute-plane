{{- if .Values.nodeDoctor.enabled }}
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: {{ include "node-doctor.name" . }}
  namespace: {{ include "main-namespace" . }}
  labels:
    {{- include "node-doctor.labels" . | nindent 4 }}
  {{- with .Values.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  selector:
    matchLabels:
      {{- include "node-doctor.selector-labels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.annotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "node-doctor.selector-labels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "node-doctor.service-account-name" . }}
      securityContext:
        {{- toYaml .Values.nodeDoctor.securityContext | nindent 8 }}
      terminationGracePeriodSeconds: 30
      {{- with .Values.nodeDoctor.priorityClassName }}
      priorityClassName: {{ . | quote }}
      {{- end }}
      containers:
        - name: {{ include "node-doctor.name" . }}
          image:  "{{ .Values.nodeDoctor.image.repository }}:{{ .Values.nodeDoctor.image.tag }}"
          imagePullPolicy: {{ .Values.nodeDoctor.image.pullPolicy | quote }}
          securityContext:
            {{- toYaml .Values.nodeDoctor.containers.nodeDoctor.securityContext | nindent 12 }}
          env:
            - name: HELM_VERSION
              value: {{ include "compute-plane.chart" . }}
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: MAPI_ADDR
              value: {{ .Values.controlPlane.mapiAddress }}
            - name: MORC_ADDR
              value: {{ .Values.controlPlane.morcAddress }}
            - name: DEPLOYMENT_ENV
              value: {{ .Values.env }}
            - name: REFRESH_RATE_MS
              value: {{ .Values.nodeDoctor.refreshRateMs | quote }}
            - name: JWT_FILEPATH
              value: /mnt/jwtRefresh/accessToken
            {{- if .Values.localDevelopment.enabled }}
            - name: LOCAL
              value: "true"
            {{- end }}
          resources:
            {{- toYaml .Values.nodeDoctor.containers.nodeDoctor.resources | nindent 12 }}
          volumeMounts:
            - name: service-jwt
              mountPath: /mnt/jwtRefresh
            {{- if .Values.localDevelopment.enabled }}
            - name: local-mcloud
              mountPath: /go/mcloud
            - name: local-go-build-cache
              mountPath: /root/.cache
            - name: local-go-pkg-cache
              mountPath: /go/pkg
            {{- end }}
          {{- if .Values.localDevelopment.enabled }}
          command: ["go", "run", "node_doctor/cmd/main.go"]
          workingDir: /go/mcloud
          {{- end }}
      volumes:
        - name: service-jwt
          secret:
            secretName: {{ include "compute-plane.service-jwt.name" . }}
        {{- if .Values.localDevelopment.enabled }}
        - name: local-mcloud
          hostPath:
            path: /mcloud
        - name: local-go-build-cache
          hostPath:
            path: /go-build-cache
        - name: local-go-pkg-cache
          hostPath:
            path: /go-pkg-cache
        {{- end }}
      {{- with .Values.nodeDoctor.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.nodeDoctor.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.nodeDoctor.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}
